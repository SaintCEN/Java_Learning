package tip;

public class test1 {
    /*
    预设注解
    JDK预设了以下注解，作用于代码：
    @Override - 检查（仅仅是检查，不保留到运行时）该方法是否是重写方法。如果发现其父类，或者是引用的接口中并没有该方法时，会报编译错误。
    @Deprecated - 标记过时方法。如果使用该方法，会报编译警告。
    @SuppressWarnings - 指示编译器去忽略注解中声明的警告（仅仅编译器阶段，不保留到运行时）
    @FunctionalInterface - Java 8 开始支持，标识一个匿名函数或函数式接口。
    @SafeVarargs - Java 7 开始支持，忽略任何使用参数为泛型变量的方法或构造函数调用产生的警告。
    元注解
    元注解是作用于注解上的注解，用于我们编写自定义的注解：
    @Retention - 标识这个注解怎么保存，是只在代码中，还是编入class文件中，或者是在运行时可以通过反射访问。
    @Documented - 标记这些注解是否包含在用户文档中。
    @Target - 标记这个注解应该是哪种 Java 成员。
    @Inherited - 标记这个注解是继承于哪个注解类(默认 注解并没有继承于任何子类)
    @Repeatable - Java 8 开始支持，标识某注解可以在同一个声明上使用多次。
    */
}
